{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/CommentSection/Comment.js","Components/CommentSection/CommentSection.js","Components/PostContainer/PostContainer.js","dummy-data.js","Components/PostContainer/PostPage.js","Components/Login/Login.js","App.js","Components/Authentication/Authenticate.js","serviceWorker.js","index.js"],"names":["SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","inputChangeHandler","e","props","filter","target","value","state","searchValue","_this2","setState","react_default","a","createElement","className","type","placeholder","onChange","Searchvalue","React","Component","Comment","username","text","CommentSection","_ref","commentValue","addNewComment","preventDefault","contentCopy","content","alert","push","localStorage","getItem","timestamp","map","comment","CommentSection_Comment","moment","fromNow","onSubmit","PostContainer","likeHandler","likes","noLike","like","dislikeHandler","src","userImg","alt","postImg","onClick","Components_CommentSection_CommentSection","comments","dummyData","thumbnailUrl","imageUrl","PostPage","filterHandler","filterData","data","includes","Components_SearchBar_SearchBar","post","Components_PostContainer_PostContainer","Login","inputHandler","defineProperty","name","submitLogin","user","password","window","setItem","location","reload","Authenticate","App","_React$Component","_class","loggedIn","inherits","createClass","key","Components_Login_Login","PostContainer_PostPage","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cfab4473.chunk.js","sourcesContent":["import React from \"react\";\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            searchValue: ''\n        }\n    }\n\n    componentDidMount() {\n        this.setState(state => ({\n            searchValue: this.props.value,\n        }))\n    }\n\n    inputChangeHandler = e => {\n        this.props.filter(e.target.value)\n    }\n\n    render(){\n        return (\n            <div className=\"searchbar-container\">\n                {/*Instagram Icon*/}\n                <i className=\"instagram-logo fa fa-instagram fa-2x\"></i>\n                <div className=\"divider\"></div>\n                {/*Instagram logo font: Billabong*/}\n                <p className=\"instagram-letter-logo\">Instagram</p>\n                {/*Search bar*/}\n                <div className=\"search-area\">\n                    <form> \n                        <input type=\"text\" placeholder=\"&#x1F50D; Search\" className=\"search-input\" onChange={this.inputChangeHandler} value={this.state.Searchvalue}/>\n                    </form>\n                </div>\n                \n                {/*3 icons on the right*/}\n                <div className=\"rigth-container\">\n                    <div className=\"rigth-icon-container\">\n                        <i className=\"far fa-compass\"></i>\n                        <i className=\"far fa-heart\"></i>\n                        <i className=\"far fa-user\"></i>\n                    </div> \n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './CommentSection.css';\n\nconst Comment = props => {\n    return(\n        <div className=\"comment-container\">\n            <p className=\"comment-username\">{props.username}</p>\n            <p className=\"comment\">{props.text}</p>\n        </div>\n    )\n}\n\nexport default Comment;","import React from 'react';\nimport Comment from \"./Comment\";\nimport './CommentSection.css';\nimport moment from 'moment';\n\nclass CommentSection extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            content: [],\n            timestamp: '',\n            commentValue: '',\n        }\n    }\n    componentDidMount() {\n        this.setState(state => ({\n            content: this.props.content,\n            timestamp: this.props.timestamp,\n        }))\n    }\n\n    inputChangeHandler = ({target}) =>  {\n        this.setState(state   =>  ({\n            commentValue: target.value,\n        }))\n    }\n    \n    addNewComment = e => {\n        e.preventDefault();\n        let contentCopy = this.state.content;\n        if (this.state.commentValue === '') {\n            alert('You have to write a comment first!')\n        } else {\n            this.state.content.push({\n                username: localStorage.getItem('user'),\n                text: this.state.commentValue})\n            this.setState(state => ({\n                content: contentCopy,\n                commentValue: '',\n            }))\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"comments-main-container\">\n                <div className=\"comments-container\">\n                    {this.state.content.map(comment => {\n                        return <Comment username={comment.username} text={comment.text}/>\n                    })}\n                    {/* Time stamp*/}\n                    <div className=\"timestamp\">{moment(this.props.timestamp, 'MMMM Do YYYY, hh:mm:ss a').fromNow()}</div>\n                    {/* Divider (border-bottom)*/}\n                </div>  \n                {/* Add Comment section*/}\n                <form className=\"new-comment\" onSubmit={this.addNewComment}>\n                    <input className=\"comment-input\" type=\"text\" placeholder=\"Add a comment...\" value={this.state.commentValue} onChange={this.inputChangeHandler}/>\n                    <i className=\"fas fa-ellipsis-h\"></i>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default CommentSection;","import React from \"react\";\nimport './PostContainer.css';\nimport CommentSection from \"../CommentSection/CommentSection\";\n\nclass PostContainer extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            likes: 0,\n            noLike: 'far fa-heart',\n            like: 'hidden',\n        }\n    }\n    componentDidMount() {\n        this.setState(state => ({\n            likes: this.props.likes,\n        }))\n    }\n\n    likeHandler = () => {\n        this.setState(state => ({\n            likes: this.state.likes + 1,\n            noLike: 'hidden',\n            like: 'fas fa-heart',\n        }))\n    }\n\n    dislikeHandler = () => {\n        this.setState(state => ({\n            likes: this.state.likes - 1,\n            noLike: 'far fa-heart',\n            like: 'hidden',\n        }))\n    }\n\n    render() {\n        return (\n            <div className=\"post-container\">\n                {/* Header Container */}\n                <div className=\"header-container\">\n                    {/* User image and username */}\n                    <img src={this.props.userImg} alt=\"User\" className=\"user-img\"/>\n                    <p className=\"username\">{this.props.username}</p>\n                </div>\n                {/* Post image*/}\n                <img src={this.props.postImg} alt=\"Post\" className=\"post-img\"/>\n                {/* Like and Comment Icons + Llke Counter */}\n                <div className=\"post-interaction\">\n                    {/* Icons */}\n                    <div className=\"post-icons\">\n                        <i className={this.state.noLike} onClick={this.likeHandler}></i>\n                        <i className={this.state.like} onClick={this.dislikeHandler}></i>\n                        <i className=\"far fa-comment\"></i>\n                    </div>\n                    {/* Like Counter */}\n                    <p className=\"likes\">\n                        {this.state.likes} likes\n                    </p>\n                </div>\n                <CommentSection content={this.props.comments} timestamp={this.props.timestamp}/>\n            </div>    \n        )\n    }\n}\n\nexport default PostContainer;","const dummyData = [\n  {\n    username: \"philzcoffee\",\n    thumbnailUrl:\n      \"https://tk-assets.lambdaschool.com/ecd33d34-c124-4b75-92d2-e5c52c171ed8_11201517_887808411287357_1307163552_a.jpg\",\n\n    imageUrl:\n      \"https://tk-assets.lambdaschool.com/69cf901b-f96d-466e-a745-ff2a01effac9_philz-image.jpg\",\n    likes: 400,\n    timestamp: \"July 17th 2017, 12:42:40 pm\",\n    comments: [\n      {\n        username: \"philzcoffee\",\n        text:\n          \"We've got more than just delicious coffees to offer at our shops!\"\n      },\n      {\n        username: \"biancasaurus\",\n        text: \"Looks delicious!\"\n      },\n      {\n        username: \"martinseludo\",\n        text: \"Can't wait to try it!\"\n      }\n    ]\n  },\n  {\n    username: \"fortnite\",\n    thumbnailUrl:\n      \"https://tk-assets.lambdaschool.com/ce601fdf-7cb0-4098-83d3-1a1584a72513_30841289_342445456281079_112845064497004544_n.jpg\",\n    imageUrl:\n      \"https://tk-assets.lambdaschool.com/89d13918-b7a2-4b40-9658-f376ea3f6b59_37131538_213683546146400_1083714364399157248_n.jpg\",\n    likes: 4307,\n    timestamp: \"July 15th 2017, 03:12:09 pm\",\n    comments: [\n      {\n        username: \"twitch\",\n        text: \"Epic Street Fighter action here in Las Vegas at #EVO2017!\"\n      },\n      {\n        username: \"michaelmarzetta\",\n        text: \"Omg that match was crazy\"\n      },\n      {\n        username: \"themexican_leprechaun\",\n        text: \"What a setup\"\n      },\n      {\n        username: \"dennis_futbol\",\n        text: \"It that injustice\"\n      },\n      {\n        username: \"dennis_futbol\",\n        text: \"Is\"\n      }\n    ]\n  },\n  {\n    username: \"playhearthstone\",\n    thumbnailUrl:\n      \"https://tk-assets.lambdaschool.com/c432f179-8bd7-4758-959d-d88a21f96bca_37105899_432228420518610_5035444036064772096_n.jpg\",\n    imageUrl:\n      \"https://tk-assets.lambdaschool.com/43bf01f9-319c-469d-8cf5-0120fe1007f1_yosemite.jpg\",\n    likes: 5306,\n    timestamp: \"July 14th 2017, 10:04:08 am\",\n    comments: [\n      {\n        username: \"playhearthstone\",\n        text: \"Love this shot!\"\n      },\n      {\n        username: \"awaywetravel\",\n        text: \"Yosemite is my most favorite place in the universe\"\n      },\n      {\n        username: \"awesomebt28\",\n        text: \"I like how Half Dome looks so old and useless\"\n      }\n    ]\n  }\n];\n\nexport default dummyData;\n","import React from 'react';\nimport SearchBar from '../SearchBar/SearchBar';\nimport PostContainer from './PostContainer';\nimport dummyData from '../../dummy-data';\nimport 'font-awesome/css/font-awesome.min.css';\n\nimport '../../App.css';\n\nclass PostPage extends React.Component {\n    constructor () {\n    super (); \n    this.state = {\n        data: [],\n        searchValue: ''\n    }\n    }\n\n    componentDidMount(){\n    this.setState(state => ({\n        data: dummyData,\n    }))\n    }\n\n    filterHandler = e =>  {\n    let filterData = dummyData.filter((data)  => data.username.includes(e))\n    this.setState((state)   =>  ({\n        data: filterData,\n        searchValue: e,\n    }))\n}\n\n\n\n    render() {\n    return (\n        <div className=\"main-container\">\n        <SearchBar filter={this.filterHandler}/>\n        {this.state.data.map(post => {\n            return <PostContainer \n                userImg={post.thumbnailUrl}\n                username={post.username}\n                postImg={post.imageUrl}\n                likes={post.likes} \n                comments={post.comments}\n                timestamp={post.timestamp}\n            />\n        })} \n        </div>\n    );\n}\n}\n\nexport default PostPage;\n","import React from 'react';\nimport \"./Login.css\";\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            username: '',\n            password: '',\n        }\n    }\n\n    //set the username/password to state \n    inputHandler = e => {\n        this.setState({[e.target.name]: e.target.value});\n    };\n\n    //send login info to local storage\n    submitLogin = () => {\n        const user = this.state.username;\n        const password = this.state.password;\n        window.localStorage.setItem('user', user);\n        window.localStorage.setItem('password', password);\n        window.location.reload();\n    }\n\n\n    render() { \n        return ( \n            <div className=\"login-main-container\">\n            <div className=\"login-container\">\n                <div className=\"header\">\n                    <h2 className=\"login-header\">Instagram</h2>\n                </div>\n                <form className=\"login-form\" onSubmit={this.submitLogin}>\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" value={this.state.username} onChange={this.inputHandler}/>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" value={this.state.password} onChange={this.inputHandler}/>\n                    <button type=\"submit\" className=\"button\">Login</button>\n                </form>   \n            </div>\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react';\nimport PostPage from './Components/PostContainer/PostPage';\nimport Authenticate from './Components/Authentication/Authenticate';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor () {\n    super (); \n    this.state = {}\n  }\n  \n  render() {\n    return (\n      <div>\n        <PostPage/>\n      </div>\n    );\n  }\n}\n\nexport default Authenticate(App);\n","import React from 'react';\nimport Login from '../Login/Login';\n\nconst Authenticate = App =>\nclass extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            loggedIn: false,\n        }\n    }\n\n    componentDidMount(){\n        if (localStorage.getItem('user') && localStorage.getItem('password')) {\n            this.setState({\n                loggedIn: true,\n            })\n        } else {\n            this.setState({\n                loggedIn: false,\n            })\n        }\n    }\n\n    render() {\n        if (this.state.loggedIn) {\n            return <App/>\n        } else {\n            return <Login/>\n        }\n    }\n}\n\nexport default Authenticate;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n;\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}